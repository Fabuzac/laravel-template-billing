BUG :

1
ModelTest to fix failure
2
Reset password bug 
3
Bug pagination shop.index
___________________________
// Faire un CRUD controller

-> php artisan make:controller CrudController --resource

___________________________
// Faire un vardump dans blade

-> @if $errors->any() @dump($errors->all()) @endif

___________________________
// Front Facile

-> https://bootswatch.com/

___________________________
// seeder, pour generer beaucoup d'articles d'un coup

-> php artisan make:seed ArticleSeeder

Run the seed, for check the code:
-> php artisan db:seed --class=ArticleSeeder
___________________________
//faker, pour generer de fausse donnees dans seed par exemple

-> $faker = Factory::create();

___________________________
//Observer, pour le slug (librairie Slugify)

-> php artisan make:observer ArticleObserver --model=Article

//Brancher un observer avec appServiceProvider !
___________________________
//tinker

-> $article = mew App\Models\Article;
-> $article->title = "my title"; 
-> $article->subtitle = "my subtitle"; 
-> $article->content = "content"; 
-> $article->save();

___________________________
//Laravel helpers

-> composer require laravel/helpers

___________________________
//Laravel interface de login

-> composer require laravel/ui
-> php artisan ui vue --auth
-> php artisan ui react --auth

// var_dump dans blade
-> @dump()

___________________________
// Reset the BBD

-> php artisan migrate:refresh

// Rollback migration

-> php artisan migrate:rollback --step=1

___________________________
// Controller avec toutes les methodes pre-definie

-> php artisan make:controller ArticleController -r

___________________________
// Faire son middleware

-> php artisan make:middleware AdminMiddleware

___________________________
// Tiny cloud text editor

-> {!! $article->content !!} pour Interpreter le code HTML,
   mais ATTENTION DANGER !
___________________________
// Personaliser requets

-> php artisan make:request ArticleRequest

___________________________
// Notification de validation, message flash

-> ->with('success', "Article saved !");
-> @dump(Session::all())

___________________________
// Faire un var_dump des methodes dispo

-> dd(get_class_methods)
___________________________
// Reset la BDD

-> php artisan migrate:reset

___________________________
// Genrer les Factories en accord avec les seeders
// factory

-> php artisan make:factory ArticleFactory

___________________________
// TESTs

-> Test fonctionel - feature

-> Test unitaire - Unit

-> php artisan test 

-> php artisan make:test RouteTest

-> php artisan test --filter=RouteTest


// Pour debuger:

-> dd(session('errors'))
-> dd($response)
-> $this->withoutExceptionHandling();
___________________________
// Realiser les tests sur une autre BDD avec sqlite

-> phpunit.xml

// Mettre en marche ceci.

-> <!-- <server name="DB_CONNECTION" value="sqlite"/> -->
   <!-- <server name="DB_DATABASE" value=":memory:"/> -->

// dans DatabaseTest, utiliser le trait

-> use RefreshDatabase;

___________________________
// dump le statut d'une requete

-> dd(request()->getStatusCode());

___________________________
// Migrate juste une table

-> php artisan make:migration update_categorie_table

// mettre a jour la function up, puis migrate

-> php artisan migrate

___________________________
// Integrer Backoffice LaravelVoyager 
-- Une fois le site "fini"

-> doc

-> php artisan voyager:admin contact@admin.com --create

// attention a definir l'env

-> APP_URL=http://localhost:8000
___________________________
// Fresh and seed la DB in same time

-> php artisan migrate:fresh --seed

___________________________
// remove et install voyager

-> composer remove tcg/voyager
-> composer require tcg/voyager
-> php artisan voyager:install

___________________________
// Clean le cache, mais dangeureux

-> php artisan optimize:clear

___________________________

